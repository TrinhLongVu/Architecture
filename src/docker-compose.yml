version: '3.8'

services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: my-secret-pw
      MYSQL_DATABASE: mydatabase
    ports:
      - "3306:3306"
  
  userdb:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: userdb
      MYSQL_DATABASE: userdb
      MYSQL_TCP_PORT: 3307
    ports:
      - "3307:3307"

  branddb:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: "1234"
      MYSQL_DATABASE: brand
      MYSQL_TCP_PORT: 3308
    volumes:
      - ./brand.sql:/docker-entrypoint-initdb.d/brand.sql
    ports:
      - "3308:3308"
      
  brandapp:
    depends_on:
      - branddb
    build: 
      context: ./services/brand
      dockerfile: dockerfile
    ports:
      - "3002:3002"
    environment:
      - DEV_MYSQL_DB_PASSWORD=1234
      - DEV_MYSQL_DB_NAME=brand
      - DEV_MYSQL_DB_HOST=branddb
      - DEV_MYSQL_DB_PORT=3308
      - DEV_MYSQL_DB_USER=root
    entrypoint: ["./wait-for-it.sh", "db:3308", "--", "node", "server.js"]


  app:
    depends_on:
      - db
    build: 
      context: ./services/authentication
      dockerfile: dockerfile
    ports:
      - "3000:3000"
    environment:
      - DEV_MYSQL_DB_PASSWORD=my-secret-pw
      - DEV_MYSQL_DB_NAME=mydatabase
      - DEV_MYSQL_DB_HOST=db
      - DEV_MYSQL_DB_PORT=3306
      - DEV_MYSQL_DB_USER=root
    entrypoint: ["./wait-for-it.sh", "db:3306", "--", "node", "server.js"]

  usermgm:
    depends_on:
      - userdb
    build: 
      context: ./services/manage-user
      dockerfile: dockerfile
    ports:
      - "3001:3001"
    environment:
      - DEV_MYSQL_DB_PASSWORD=userdb
      - DEV_MYSQL_DB_NAME=userdb
      - DEV_MYSQL_DB_HOST=userdb
      - DEV_MYSQL_DB_PORT=3307
      - DEV_MYSQL_DB_USER=root
    entrypoint: ["./wait-for-it.sh", "db:3307", "--", "node", "server.js"]